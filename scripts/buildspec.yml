version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI
      - echo Setting IMAGE_TAG to build ID...
      - export IMAGE_TAG=$(echo $CODEBUILD_BUILD_ID | sed 's/:/_/g')
      - echo "AWS_REGION=$AWS_REGION" >> env_vars
      - echo "ECR_REPOSITORY_URI=$ECR_REPOSITORY_URI" >> env_vars
      - echo "ECR_REPOSITORY_API=$ECR_REPOSITORY_API" >> env_vars
      - echo "EXECUTION_ROLE_ARN=$EXECUTION_ROLE_ARN" >> env_vars
      - echo "CLUSTER_NAME=$CLUSTER_NAME" >> env_vars
      - echo "SERVICE_NAME=$SERVICE_NAME" >> env_vars
      - echo "TASK_CPU=$TASK_CPU" >> env_vars
      - echo "TASK_MEMORY=$TASK_MEMORY" >> env_vars
      - echo "CONTAINER_CPU=$CONTAINER_CPU" >> env_vars
      - echo "CONTAINER_MEMORY=$CONTAINER_MEMORY" >> env_vars
      - echo "TASK_FAMILY=$TASK_FAMILY" >> env_vars
  build:
    commands:
      - echo Building Docker image...
      - echo $IMAGE_TAG
      - docker build -t $ECR_REPOSITORY_API:$IMAGE_TAG .
      - echo Tagging the image with 'latest'...
      - docker tag $ECR_REPOSITORY_API:$IMAGE_TAG $ECR_REPOSITORY_URI/$ECR_REPOSITORY_API:latest
      - docker tag $ECR_REPOSITORY_API:$IMAGE_TAG $ECR_REPOSITORY_URI/$ECR_REPOSITORY_API:$IMAGE_TAG
  post_build:
    commands:
      - echo Pushing Docker image to Amazon ECR with build ID tag...
      - docker push $ECR_REPOSITORY_URI/$ECR_REPOSITORY_API:$IMAGE_TAG
      - echo Pushing Docker image to Amazon ECR with 'latest' tag...
      - docker push $ECR_REPOSITORY_URI/$ECR_REPOSITORY_API:latest
      - echo Registering new task definition in ECS...
      - |
        TASK_DEF_ARN=$(aws ecs register-task-definition \
          --family $TASK_FAMILY \
          --network-mode awsvpc \
          --requires-compatibilities FARGATE \
          --cpu $TASK_CPU \
          --memory $TASK_MEMORY \
          --execution-role-arn $EXECUTION_ROLE_ARN \
          --container-definitions "[
            {
              \"name\": \"$ECR_REPOSITORY_API\",
              \"image\": \"$ECR_REPOSITORY_URI/$ECR_REPOSITORY_API:$IMAGE_TAG\",
              \"essential\": true,
              \"cpu\": $CONTAINER_CPU,
              \"memory\": $CONTAINER_MEMORY,
              \"portMappings\": [
                {
                  \"containerPort\": 8080,
                  \"hostPort\": 8080,
                  \"protocol\": \"tcp\"
                }
              ],
              \"logConfiguration\": {
                \"logDriver\": \"awslogs\",
                \"options\": {
                  \"awslogs-group\": \"/ecs/$TASK_FAMILY\",
                  \"awslogs-create-group\": \"true\",
                  \"awslogs-region\": \"$AWS_REGION\",
                  \"awslogs-stream-prefix\": \"ecs\"
                }
              }
            }
          ]" \
          --query 'taskDefinition.taskDefinitionArn' \
          --output text)
        echo "Registered Task Definition ARN: $TASK_DEF_ARN"
        echo $TASK_DEF_ARN > task_def_arn.txt
      - echo Updating ECS service to use the new task definition...
      - export TASK_DEFINITION_ARN=$(cat task_def_arn.txt)
      - echo "Task Definition ARN to be used: $TASK_DEFINITION_ARN"
      - aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --task-definition $TASK_DEFINITION_ARN

artifacts:
  files:
    - '**/*'
    - env_vars
    - task_def_arn.txt
